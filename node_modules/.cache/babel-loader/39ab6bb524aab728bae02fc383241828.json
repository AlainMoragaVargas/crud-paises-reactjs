{"ast":null,"code":"var _jsxFileName = \"/home/alain/Proyectos/Proyectos Personales/laravel-reactjs/reactjs-frontend/src/components/countries/CountryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountryList = () => {\n  _s();\n\n  const [country, setCountry] = useState([]);\n  const [form, setForm] = useState({\n    countryName: '',\n    countryPrefix: '',\n    countryDomain: '',\n    countryFlag: ''\n  });\n\n  const handleInputChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const getCountries = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/countries/list`);\n    const countries = await data.json();\n    setCountry(countries);\n  };\n\n  const deleteContries = async id => {\n    const data = await fetch(`http://127.0.0.1:8000/api/countries/delete-country/${id}`);\n    const response = await data.json();\n    response.success === true ? alert(response.message) : alert('Ha ocurrido un error.');\n    getCountries();\n  };\n\n  const insertCountry = async e => {\n    e.preventDefault();\n    const data = await fetch('http://127.0.0.1:8000/api/countries/create-country', {\n      method: 'POST',\n      body: JSON.stringify(form),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const response = await data.json();\n    response.success === true ? alert(response.message) : alert('Ha ocurrido un error.');\n    getCountries();\n  };\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: \"hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CountryList, \"0uZoRmRE9W6kigucKW1El6mVc1s=\");\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["/home/alain/Proyectos/Proyectos Personales/laravel-reactjs/reactjs-frontend/src/components/countries/CountryList.js"],"names":["React","useEffect","useState","CountryList","country","setCountry","form","setForm","countryName","countryPrefix","countryDomain","countryFlag","handleInputChange","e","target","name","value","getCountries","data","fetch","countries","json","deleteContries","id","response","success","alert","message","insertCountry","preventDefault","method","body","JSON","stringify","headers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBH,QAAQ,CAAC,EAAD,CAArC;AAEA,QAAM,CAACI,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC;AAC9BM,IAAAA,WAAW,EAAG,EADgB;AAE9BC,IAAAA,aAAa,EAAG,EAFc;AAG9BC,IAAAA,aAAa,EAAG,EAHc;AAI9BC,IAAAA,WAAW,EAAG;AAJgB,GAAD,CAA/B;;AAOA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BN,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFrB,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,0CAAF,CAAxB;AACA,UAAMC,SAAS,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAxB;AACAhB,IAAAA,UAAU,CAACe,SAAD,CAAV;AACD,GAJD;;AAMA,QAAME,cAAc,GAAG,MAAOC,EAAP,IAAc;AACnC,UAAML,IAAI,GAAG,MAAMC,KAAK,CAAE,sDAAqDI,EAAG,EAA1D,CAAxB;AACA,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACG,IAAL,EAAvB;AACAG,IAAAA,QAAQ,CAACC,OAAT,KAAqB,IAArB,GAA4BC,KAAK,CAACF,QAAQ,CAACG,OAAV,CAAjC,GAAsDD,KAAK,CAAC,uBAAD,CAA3D;AACAT,IAAAA,YAAY;AACb,GALD;;AAOA,QAAMW,aAAa,GAAG,MAAOf,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACgB,cAAF;AACA,UAAMX,IAAI,GAAG,MAAMC,KAAK,CAAC,oDAAD,EAAsD;AAC5EW,MAAAA,MAAM,EAAE,MADoE;AAE5EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe3B,IAAf,CAFsE;AAG5E4B,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHmE,KAAtD,CAAxB;AAKA,UAAMV,QAAQ,GAAG,MAAMN,IAAI,CAACG,IAAL,EAAvB;AACAG,IAAAA,QAAQ,CAACC,OAAT,KAAqB,IAArB,GAA4BC,KAAK,CAACF,QAAQ,CAACG,OAAV,CAAjC,GAAsDD,KAAK,CAAC,uBAAD,CAA3D;AACAT,IAAAA,YAAY;AACb,GAVD;;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY;AACb,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAKD,CApDD;;GAAMd,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\n\nconst CountryList = () => {\n\n  const [country,setCountry] = useState([]);\n\n  const [form,setForm] = useState({\n    countryName : '',\n    countryPrefix : '',\n    countryDomain : '',\n    countryFlag : ''\n  }); \n\n  const handleInputChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name] : e.target.value\n    });\n  };\n\n  const getCountries = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/countries/list`);\n    const countries = await data.json();\n    setCountry(countries); \n  }\n\n  const deleteContries = async (id) => {\n    const data = await fetch(`http://127.0.0.1:8000/api/countries/delete-country/${id}`);\n    const response = await data.json();\n    response.success === true ? alert(response.message) : alert('Ha ocurrido un error.');\n    getCountries();\n  }\n\n  const insertCountry = async (e) => {\n    e.preventDefault();\n    const data = await fetch('http://127.0.0.1:8000/api/countries/create-country',{\n      method: 'POST',\n      body: JSON.stringify(form),\n      headers: { 'Content-Type': 'application/json' },\n    });\n    const response = await data.json();\n    response.success === true ? alert(response.message) : alert('Ha ocurrido un error.');\n    getCountries();\n  };\n\n  useEffect(() => {\n    getCountries();\n  },[]);\n\n  return (\n  <div className='table-container'>\n    hola\n  </div>\n  )  \n}\n\nexport default CountryList;"]},"metadata":{},"sourceType":"module"}